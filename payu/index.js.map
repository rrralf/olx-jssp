{"version":3,"file":"index.js","sources":["../src/payu-api.ts","../src/index.ts"],"sourcesContent":["import * as TSHash from 'js-sha512';\r\n// var XMLHttpRequest = require(\"xmlhttprequest\").XMLHttpRequest;\r\n// var hash = require()\r\n\r\nexport module PayU {\r\n    export class PayUResponse {\r\n        public transactionId : string;\r\n        public statusCode : string;\r\n        public statusDescription : string;\r\n        public url : string;\r\n        public email : string;\r\n\r\n        public errorCode : string;\r\n        public errorDescription : string;\r\n\r\n        public debugRequest : string;\r\n        public debugResponse : string;\r\n\r\n        constructor() {\r\n            this.errorCode = \"\";\r\n            this.statusCode = \"\";\r\n        }\r\n    }\r\n\r\n    export function payuParseResp(response: string) : any\r\n    {\r\n        const preRegex = new RegExp('^<pre>(.*?)<\\/pre>$', 'ims');\r\n        var match = preRegex.exec(response);\r\n        let resp = {};\r\n        \r\n        if (match && match.length == 2) {\r\n            let text = match[1];\r\n    \r\n            if (!text.startsWith('Array')) {\r\n                resp['ErrorCode'] = '101';\r\n                resp['Error'] = text;\r\n            } else {\r\n                resp['ErrorCode'] = '0';\r\n                text.split(/\\n/g).forEach(function (line) {\r\n                    let mmm = (/\\[(.*?)\\]\\s+=>\\s+(.*?)$/).exec(line)\r\n                    if (mmm && mmm.length == 3) {\r\n                        resp[mmm[1]] = mmm[2];\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            resp['ErrorCode'] = '100';\r\n            resp['Error'] = 'unknown answer';\r\n        }\r\n    \r\n        return resp;\r\n    }\r\n\r\n    export class PayUWrapper {\r\n        private _endpoint : string;\r\n        private _merchantId : string;\r\n        private _salt : string;\r\n    \r\n        constructor(baseUrl: string, merchantId: string, salt: string)\r\n        {\r\n            this._endpoint = baseUrl;\r\n            this._merchantId = merchantId;\r\n            this._salt = salt;\r\n        }\r\n\r\n        \r\n\r\n        createInvoice(request : any) : Promise<PayUResponse> \r\n        {\r\n            var jsonString = JSON.stringify(request);\r\n            let hashString = `${this._merchantId}|create_invoice|${jsonString}|${this._salt}`;\r\n            let hashRes = \"\";\r\n            //let hashRes = TSHash.sha512(hashString);\r\n          \r\n            let requestBody = \"\";\r\n            let urlEncodedDataPairs = [];\r\n      \r\n            urlEncodedDataPairs.push( encodeURIComponent( \"key\" ) + '=' + encodeURIComponent( this._merchantId ) );\r\n            urlEncodedDataPairs.push( encodeURIComponent( \"command\" ) + '=' + encodeURIComponent( \"create_invoice\" ) );\r\n            urlEncodedDataPairs.push( encodeURIComponent( \"hash\" ) + '=' + encodeURIComponent( hashRes ) );\r\n            urlEncodedDataPairs.push( encodeURIComponent( \"var1\" ) + '=' + encodeURIComponent( jsonString ) );\r\n\r\n            // Combine the pairs into a single string and replace all %-encoded spaces to \r\n            // the '+' character; matches the behaviour of browser form submissions.\r\n            requestBody = urlEncodedDataPairs.join( '&' ).replace( /%20/g, '+' );\r\n\r\n            var _ep = this._endpoint;\r\n\r\n            return new Promise<PayUResponse>((resolve, reject) => {\r\n                var rr = new PayUResponse();\r\n                rr.transactionId = request.txnid;\r\n                rr.debugRequest = requestBody;\r\n                rr.errorCode = \"0\";\r\n\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.onreadystatechange = function() {\r\n                    try {\r\n                        if (xhr.readyState !== 4) return;\r\n                        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status + \"; \" + xhr.responseText);\r\n        \r\n                        rr.debugResponse = xhr.responseText;\r\n\r\n                        // parse response\r\n                        const resp = payuParseResp(xhr.responseText);\r\n\r\n                        if (resp['Error']) {\r\n                            rr.errorCode = resp['ErrorCode'];\r\n                            rr.errorDescription = resp['Error'];\r\n                            rr.statusCode = '100';\r\n                        } else {\r\n                            rr.transactionId = resp['Transaction Id'];\r\n                            rr.url = resp['URL'];\r\n                            rr.email = resp['Email Id'];\r\n                        }\r\n\r\n                        resolve(rr);\r\n                    } catch (e) {\r\n                        rr.errorCode = \"-1\";\r\n                        rr.errorDescription = e.message;\r\n\r\n                        reject(rr);\r\n                    }\r\n                };\r\n                \r\n                xhr.open(\"POST\", _ep);\r\n                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n                xhr.send(requestBody);\r\n            });\r\n\r\n        }\r\n    }\r\n}","import '@k2oss/k2-broker-core';\r\nimport { PayU } from './payu-api';\r\n\r\n// K2 API\r\nmetadata = {\r\n    systemName: \"PayU API\",\r\n    displayName: \"PayU API\",\r\n    description: \"PayU integration API\",\r\n\r\n    //configuration values - an object defining the K2 Service Keys when registering a Service Instance  \r\n    \"configuration\": { //configuration values (service keys)\r\n        // endpoint URL configuration parameter\r\n        \"EndpointUrl\": {\r\n            displayName: \"PayU endpoint Url\",\r\n            type: \"string\",\r\n            value: \"https://test.payu.in/merchant/postservice.php?form=1\" // valid values are Alphabetic, Numeric, Alphanumeric\r\n        },\r\n        \"MerchantId\": {\r\n            displayName: \"PayU MerchantId\",\r\n            type: \"string\",\r\n            value: \"eekig4\" // valid values are Alphabetic, Numeric, Alphanumeric\r\n        },\r\n        \"SALT\": {\r\n            displayName: \"PayU Merchant SALT\",\r\n            type: \"string\",\r\n            value: \"KsnWno3F\" // valid values are Alphabetic, Numeric, Alphanumeric\r\n        },\r\n\r\n        \"EMailTemplateId\": {\r\n            displayName: \"PayU EMail Template Id\",\r\n            type: \"string\",\r\n            value: \"1449\" \r\n        },\r\n\r\n        \"SMSTemplateId\": {\r\n            displayName: \"PayU SMS Template Id\",\r\n            type: \"string\",\r\n            value: \"1448\" \r\n        },\r\n\r\n        \"ValidationPeriod\": {\r\n            displayName: \"PayU Validation Period\",\r\n            type: \"string\",\r\n            value: \"6\" \r\n        },\r\n\r\n        \"DoSendSMS\": {\r\n            displayName: \"PayU Send SMS on create_invoice\",\r\n            type: \"string\",\r\n            value: \"1\" \r\n        },\r\n\r\n        \"DoSendEmail\": {\r\n            displayName: \"PayU Send Email on create_invoice\",\r\n            type: \"string\",\r\n            value: \"1\" \r\n        }\r\n    },    \r\n};\r\n\r\nondescribe = async function({configuration}): Promise<void> {\r\n    postSchema({            \r\n        objects: {\r\n            \"PayU\": {\r\n                displayName: \"PayU payment API\",\r\n                description: \"PayU payment API\",\r\n                properties: {\r\n                    \"transactionId\": {\r\n                        displayName: \"transactionId\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"statusCode\": {\r\n                        displayName: \"statusCode\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"statusDescription\": {\r\n                        displayName: \"statusDescription\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"errorCode\": {\r\n                        displayName: \"errorCode\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"errorDescription\": {\r\n                        displayName: \"errorDescription\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"debugRequest\": {\r\n                        displayName: \"debugRequest\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"debugResponse\": {\r\n                        displayName: \"debugResponse\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"url\": {\r\n                        displayName: \"payment url\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"email\": {\r\n                        displayName: \"customer email\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"version\": {\r\n                        displayName: \"version\",\r\n                        type: \"string\"\r\n                    },\r\n                    \"timeout\": {\r\n                        displayName: \"timeout (minutes)\",\r\n                        type: \"number\"\r\n                    },\r\n                },\r\n                methods: {\r\n                    \"CreateInvoice\": {\r\n                        displayName: \"Create Invoice\",\r\n                        type: \"execute\",\r\n                        parameters: {\r\n                            \"pTransactionId\": { displayName: \"pTransactionId\", description: \"Transaction Id\", type: \"string\"},\r\n                            \"pProductInfo\": { displayName: \"pProductInfo\", description: \"This parameter should contain a brief product description. It should be a string describing the product\", type: \"string\"},\r\n                            \"pAmount\": { displayName: \"pAmount\", description: \"Transaction amount\", type: \"string\"},\r\n\r\n                            \"pFirstName\": { displayName: \"pFirstName\", description: \"first name of the customer\", type: \"string\"},\r\n                            \"pLastName\": { displayName: \"pLastName\", description: \"last name of the customer\", type: \"string\"},\r\n                            \"pEmail\": { displayName: \"pEmail\", description: \"email of the customer\", type: \"string\"},\r\n                            \"pPhone\": { displayName: \"pPhone\", description: \"The phone number of the customer\", type: \"string\"},\r\n                            \"pAddress1\": { displayName: \"pAddress1\", description: \"Address line #1\", type: \"string\"},\r\n                            \"pCity\": { displayName: \"pCity\", description: \"City\", type: \"string\"},\r\n                            \"pState\": { displayName: \"pState\", description: \"State\", type: \"string\"},\r\n                            \"pCountry\": { displayName: \"pCountry\", description: \"Country\", type: \"string\"},\r\n                            \"pZip\": { displayName: \"pZip\", description: \"ZIP Code\", type: \"string\"},\r\n                        },\r\n                        requiredParameters: [ \r\n                            \"pTransactionId\", \r\n                            \"pProductInfo\", \"pAmount\", \r\n                            \"pFirstName\", \"pEmail\", \r\n                            \"pAddress1\", \"pCity\", \"pState\", \"pCountry\", \"pZip\"\r\n\r\n                        ],\r\n                        outputs: [ \"transactionId\", \"statusCode\", \"statusDescription\", \"errorCode\", \"errorDescription\", \"debugRequest\", \"debugResponse\", \"url\", \"email\"  ]\r\n                    },\r\n\r\n                    \"GetTransactionId\": {\r\n                        displayName: \"Generate new transactionId\",\r\n                        type: \"read\",\r\n                        parameters: {\r\n                            \"pLeadNumber\": { displayName: \"pLeadNumber\", description: \"Lead Number\", type: \"string\"},\r\n                            \"pProductType\": { displayName: \"pProductType\", description: \"Type of product\", type: \"string\"}\r\n                        },\r\n                        requiredParameters: [ \r\n                            \"pLeadNumber\", \"pProductType\"\r\n                        ],\r\n                        outputs: [ \"transactionId\"  ]\r\n                    },\r\n\r\n                    \"GetVersion\": {\r\n                        displayName: \"Get gateway version\",\r\n                        type: \"read\",\r\n                        outputs: [ \"version\" ]\r\n                    },\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nonexecute = async function({objectName, methodName, parameters, properties, configuration, schema}): Promise<void> {\r\n    try {\r\n        switch (objectName)\r\n        {\r\n            case \"PayU\": await onexecutePayU(methodName, properties, parameters, configuration); break;\r\n            default: throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n        }\r\n    } catch(e) {\r\n        postResult({\r\n            \"statusCode\": \"Exception\",\r\n            \"statusDescription\": e.message,\r\n    \r\n            \"errorCode\": \"Exception\",\r\n            \"errorDescription\": e.stack,\r\n        });\r\n    }\r\n}\r\n\r\nasync function onexecutePayU(methodName: string, properties: SingleRecord, parameters: SingleRecord, configuration): Promise<void> {\r\n    switch (methodName)\r\n    {\r\n        case \"CreateInvoice\": await payuCreateInvoice(parameters, configuration); break;\r\n        case \"GetTransactionId\": await payuGetTransactionId(parameters, configuration); break;\r\n        case \"GetVersion\": await payuGetVersion(parameters, configuration); break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n    }\r\n}\r\n\r\n\r\nfunction payuCreateInvoice(parameters: SingleRecord, configuration): Promise<void> {\r\n    var endpoint = configuration[\"EndpointUrl\"];\r\n    var merchantId = configuration[\"MerchantId\"];\r\n    var salt = configuration[\"SALT\"];\r\n\r\n    let request = {\r\n        \"amount\": parameters[\"pAmount\"],\r\n        \"txnid\": parameters[\"pTransactionId\"],\r\n        \"productinfo\": parameters[\"pProductInfo\"],\r\n        \"firstname\": parameters[\"pFirstName\"],\r\n        \"lastname\": parameters[\"pLastName\"],\r\n        \"email\": parameters[\"pEmail\"],\r\n        \"phone\": parameters[\"pPhone\"],\r\n        \"address1\": parameters[\"pAddress1\"],\r\n        \"city\": parameters[\"pCity\"],\r\n        \"state\": parameters[\"pState\"],\r\n        \"country\": parameters[\"pCountry\"],\r\n        \"zipcode\": parameters[\"pZip\"],\r\n\r\n        \"template_id\": configuration[\"EMailTemplateId\"],\r\n        \"sms_template_id\": configuration[\"SMSTemplateId\"],\r\n        \"validation_period\": configuration[\"ValidationPeriod\"],\r\n        \"send_email_now\": configuration[\"DoSendEmail\"],\r\n        \"send_sms\": configuration[\"DoSendSMS\"]\r\n      };\r\n\r\n    return new Promise<void>((resolve, reject) =>\r\n    {\r\n        var wrap = new PayU.PayUWrapper(endpoint, merchantId, salt);\r\n\r\n        wrap.createInvoice(request)\r\n        .then((response) => {\r\n            console.log(response);\r\n\r\n            // return results to K2\r\n            postResult(toK2Result(response));\r\n            resolve();\r\n        }) \r\n        .catch((err) => {\r\n            console.log(err);\r\n\r\n            postResult(toK2Result(err));\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\n\r\nfunction payuGetVersion(parameters: SingleRecord, configuration): Promise<void> {\r\n    return new Promise<void>((resolve, reject) =>\r\n    {\r\n        postResult({\r\n            \"version\": \"202011212303\"\r\n        });\r\n    });\r\n}\r\n\r\n\r\nfunction payuGetTransactionId(parameters: SingleRecord, configuration): Promise<void> {\r\n    return new Promise<void>((resolve, reject) =>\r\n    {\r\n        var leadNumber : string = parameters[\"pLeadNumber\"].toString();\r\n        var productType : string = parameters[\"pProductType\"].toString();\r\n\r\n        leadNumber = leadNumber.substr(0, 9).padStart(9, \"0\");\r\n        productType = productType.substr(0, 4).padStart(4, \"0\");\r\n        var uniqueValue : string = makeUniqId(20-9-4);\r\n\r\n        if (parameters[\"pLeadNumber\"].toString() == \"test123\")\r\n            uniqueValue = \"123456789\";\r\n\r\n        var result = `${leadNumber}${productType}${uniqueValue}`;\r\n\r\n        // replace replaces only 1st occurance\r\n        result = result.split('&').join('_');\r\n        result = result.split(' ').join('_');\r\n\r\n        postResult({\r\n            \"transactionId\": result\r\n        });\r\n        resolve();\r\n    });\r\n}\r\n\r\n/// https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\nfunction makeUniqId(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n }\r\n\r\nfunction toK2Result(response : PayU.PayUResponse) {\r\n    return {\r\n        \"transactionId\": response.transactionId,\r\n\r\n        \"statusCode\": response.statusCode,\r\n        \"statusDescription\": response.statusDescription,\r\n        \"url\": response.url,\r\n        \"email\": response.email,\r\n\r\n        \"errorCode\": response.errorCode,\r\n        \"errorDescription\": response.errorDescription,\r\n\r\n        \"debugRequest\": response.debugRequest,\r\n        \"debugResponse\": response.debugResponse\r\n    };\r\n}"],"names":["PayUResponse","constructor","errorCode","statusCode","payuParseResp","response","preRegex","RegExp","match","exec","resp","length","text","startsWith","split","forEach","line","mmm","PayUWrapper","baseUrl","merchantId","salt","_endpoint","_merchantId","_salt","createInvoice","request","jsonString","JSON","stringify","hashString","hashRes","requestBody","urlEncodedDataPairs","push","encodeURIComponent","join","replace","_ep","Promise","resolve","reject","rr","transactionId","txnid","debugRequest","xhr","XMLHttpRequest","onreadystatechange","readyState","status","Error","responseText","debugResponse","errorDescription","url","email","e","message","open","setRequestHeader","send","PayU","metadata","systemName","displayName","description","type","value","ondescribe","configuration","postSchema","objects","properties","methods","parameters","requiredParameters","outputs","onexecute","objectName","methodName","schema","onexecutePayU","postResult","stack","payuCreateInvoice","payuGetTransactionId","payuGetVersion","endpoint","wrap","then","console","log","toK2Result","catch","err","leadNumber","toString","productType","substr","padStart","uniqueValue","makeUniqId","result","characters","charactersLength","i","charAt","Math","floor","random","statusDescription"],"mappings":"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"}